package com.springboot.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.io.File;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.springboot.Database_columns;
import com.springboot.Database_columns_Repository;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

//import com.springboot.service.AmazonClient;

@Controller
public class HandleController {

   //private AmazonClient amazonClient;
   // @Autowired
   //    HandleController(AmazonClient amazonClient) {
   //          this.amazonClient = amazonClient;
   //    }

   @Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private Database_columns_Repository db_Repository;

   @RequestMapping("/")
   public String index() {
      return "index";
   }

   @RequestMapping(value="/upload",method=RequestMethod.POST)
   public String uploadExcelFiles(@RequestParam(value="fileName") MultipartFile[] files, Model model) throws IllegalStateException, IOException {
	         int sz=0;
	         //String saveDirectory
	        //  = "/home/ubuntu/Desktop/";
	         List<String> fileNames = new ArrayList<String>();

	         //this.amazonClient.uploadFile(files);
	         
	         for(MultipartFile readExcelDataFile : files)
	             {  

	             	XSSFWorkbook workbook = new XSSFWorkbook(readExcelDataFile.getInputStream());
					XSSFSheet worksheet = workbook.getSheetAt(0);
				    
				    XSSFRow row = worksheet.getRow(0);
				    int no_of_column = row.getLastCellNum();
				    Map<String,Integer> mp = new HashMap<String,Integer>();

				    for(int i=0;i<no_of_column;++i)
				        mp.put(row.getCell(i).getStringCellValue().toLowerCase(),i);
				    
				    for(int i=1;i<worksheet.getPhysicalNumberOfRows() ;i++) {
				    	
				        row = worksheet.getRow(i);
				        Database_columns u = new Database_columns();
				        long aadhar_num=0;
				        XSSFCell c = row.getCell(mp.get("aadharnumber")); //To validate null value in Aadhar number Cell
				        if(c==null)
				        	aadhar_num = 0;
				        else
				        	aadhar_num = (long)(c.getNumericCellValue());
				        //System.out.println(i+" "+row.getCell(mp.get("tid")).getStringCellValue());
				        u.set_details(row.getCell(mp.get("tid")).getStringCellValue(),row.getCell(mp.get("patientname")).getStringCellValue(),row.getCell(mp.get("hospitalcode")).getStringCellValue(),row.getCell(mp.get("hospitalname")).getStringCellValue(),
				        	row.getCell(mp.get("hospitaltype")).getStringCellValue(),row.getCell(mp.get("pkgcode")).getStringCellValue(),row.getCell(mp.get("pkgname")).getStringCellValue(),(int)row.getCell(mp.get("pkgrate")).getNumericCellValue(),
				        	row.getCell(mp.get("idtype")).getStringCellValue(),row.getCell(mp.get("idnumber")).getStringCellValue(),row.getCell(mp.get("districtname")).getStringCellValue(),aadhar_num,
				        	row.getCell(mp.get("policyyear")).getStringCellValue(),(long)row.getCell(mp.get("mobileno")).getNumericCellValue(),row.getCell(mp.get("status")).getStringCellValue(),row.getCell(mp.get("claimnumber")).getStringCellValue(),
				        	row.getCell(mp.get("gender")).getStringCellValue(),(int)(row.getCell(mp.get("age")).getNumericCellValue()));
				    	db_Repository.save(u);
		     		}

	             	String filename=readExcelDataFile.getOriginalFilename();
		             //mp.transferTo(new File(saveDirectory + filename));
		            fileNames.add(filename);

		            ++sz;
	            }
	            
	         model.addAttribute("sz", sz);
	         model.addAttribute("files",fileNames);
	         return "uploadedFile";
      }

    @GetMapping(path="/all")
	public @ResponseBody Iterable<Database_columns> getAllUsers() {
		// This returns a JSON or XML with the users
		return db_Repository.findAll();
	}


   }
